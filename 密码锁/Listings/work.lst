C51 COMPILER V9.60.0.0   WORK                                                              12/28/2020 08:57:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE WORK
OBJECT MODULE PLACED IN .\Objects\work.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE work.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\work
                    -.lst) TABS(2) OBJECT(.\Objects\work.obj)

line level    source

   1          #include"keyboard.h"
   2          #include"lcd12864.h"
   3          #include<reg52.h>
   4          #include"work.h"
   5          
   6          void ft_dis(uchar*ft_sign)
   7          {
   8   1        if(*ft_sign==1)
   9   1        {
  10   2          lcd_display(0,32,2,16,prompt[3]);
  11   2          lcd_display(0,32+16,2,16,prompt[4]);
  12   2          lcd_display(0,32+32,2,16,prompt[5]);
  13   2          lcd_display(0,32+3*16,2,16,prompt[6]);
  14   2          lcd_display(3,16,2,16,prompt[11]);
  15   2          lcd_display(3,32,2,16,prompt[16]);
  16   2          lcd_display(3,32+16,2,16,prompt[17]);
  17   2          lcd_display(3,32+2*16,2,16,prompt[18]);
  18   2          lcd_display(3,32+3*16,2,16,prompt[19]);
  19   2          lcd_display(3,32+4*16,2,16,prompt[20]);
  20   2        }
  21   1        else if(*ft_sign==0)
  22   1        {
  23   2          lcd_display(0,0,2,16,prompt[0]);
  24   2          lcd_display(0,16,2,16,prompt[1]);
  25   2          lcd_display(0,32,2,16,prompt[2]);
  26   2          lcd_display(0,48,2,16,prompt[3]);
  27   2          lcd_display(0,64,2,16,prompt[4]);
  28   2          lcd_display(2,16,2,8,symbol[0]);
  29   2          lcd_display(2,16+8,2,8,symbol[1]);
  30   2        }
  31   1        else
  32   1        {
  33   2          lcd_display(0,32,2,16,prompt[3]);
  34   2          lcd_display(0,32+16,2,16,prompt[4]);
  35   2          lcd_display(0,32+32,2,16,prompt[7]);
  36   2          lcd_display(0,32+3*16,2,16,prompt[8]);
  37   2          lcd_display(4,24,2,16,prompt[0]);
  38   2          lcd_display(4,24+16,2,16,prompt[9]);
  39   2          lcd_display(4,24+32,2,16,prompt[10]);
  40   2          lcd_display(4,24+3*16,2,16,prompt[1]);
  41   2          lcd_display(4,24+4*16,2,16,prompt[2]);
  42   2          lcd_display(2,16,2,8,symbol[0]);
  43   2          lcd_display(2,16+8,2,8,symbol[1]);
  44   2        }
  45   1      }
  46          
  47          void YN_password(char *flag,uchar *ft_sign)
  48          {
  49   1        uchar i;
  50   1        if(*flag<10)
  51   1          {
  52   2            switch(witch_key())
  53   2            {
  54   3            case '0':
C51 COMPILER V9.60.0.0   WORK                                                              12/28/2020 08:57:05 PAGE 2   

  55   3              lcd_display(2,24+(*flag+1)*8,2,8,num[0]);
  56   3              password[*flag]='0';
  57   3              (*flag)++;
  58   3              key_sign='n';       
  59   3            break;
  60   3            case '1':
  61   3              lcd_display(2,24+(*flag+1)*8,2,8,num[1]);
  62   3              password[*flag]='1';
  63   3              (*flag)++;
  64   3              key_sign='n';       
  65   3            break;
  66   3            case '2':
  67   3              lcd_display(2,24+(*flag+1)*8,2,8,num[2]);
  68   3              password[*flag]='2';
  69   3              (*flag)++;
  70   3              key_sign='n';       
  71   3            break;
  72   3            case '3':
  73   3              lcd_display(2,24+(*flag+1)*8,2,8,num[3]);
  74   3              password[*flag]='3';
  75   3              (*flag)++;
  76   3              key_sign='n';       
  77   3            break;
  78   3            case '4':
  79   3              lcd_display(2,24+(*flag+1)*8,2,8,num[4]);
  80   3              password[*flag]='4';
  81   3              (*flag)++;
  82   3              key_sign='n';       
  83   3            break;
  84   3            case '5':
  85   3              lcd_display(2,24+(*flag+1)*8,2,8,num[5]);
  86   3              password[*flag]='5';
  87   3              (*flag)++;
  88   3              key_sign='n';
  89   3            break;
  90   3            case '6':
  91   3              lcd_display(2,24+(*flag+1)*8,2,8,num[6]);
  92   3              password[*flag]='6';
  93   3              (*flag)++;
  94   3              key_sign='n';
  95   3            break;
  96   3            case '7':
  97   3              lcd_display(2,24+(*flag+1)*8,2,8,num[7]);
  98   3              password[*flag]='7';
  99   3              (*flag)++;
 100   3              key_sign='n';     
 101   3            break;
 102   3            case '8':
 103   3              lcd_display(2,24+(*flag+1)*8,2,8,num[8]);
 104   3              password[*flag]='8';
 105   3              (*flag)++;
 106   3              key_sign='n';
 107   3            break;
 108   3            case '9':
 109   3              lcd_display(2,24+(*flag+1)*8,2,8,num[9]);
 110   3              password[*flag]='9';
 111   3              (*flag)++;
 112   3              key_sign='n';
 113   3            break;
 114   3            case 'a':
 115   3              lcd_display(2,24+(*flag+1)*8,2,8,num[10]);
 116   3              password[*flag]='A';
C51 COMPILER V9.60.0.0   WORK                                                              12/28/2020 08:57:05 PAGE 3   

 117   3              (*flag)++;
 118   3              key_sign='n';
 119   3            break;
 120   3            case 'b':
 121   3              lcd_display(2,24+(*flag+1)*8,2,8,num[11]);
 122   3              (*flag)++;
 123   3              key_sign='n';
 124   3              password[*flag]='B';
 125   3            break;
 126   3            case 'c':
 127   3              lcd_display(2,24+(*flag+1)*8,2,8,num[12]);
 128   3              password[*flag]='C';
 129   3              (*flag)++;
 130   3              key_sign='n';
 131   3            break;
 132   3            case 'd':
 133   3              lcd_display(2,24+(*flag+1)*8,2,8,num[13]);
 134   3              password[*flag]='D';
 135   3              (*flag)++;
 136   3              key_sign='n';
 137   3            break;
 138   3            case '*':
 139   3              (*flag)--;
 140   3              lcd_display(2,24+(*flag+1)*8,2,8,symbol[2]);
 141   3              key_sign='n'; 
 142   3              if(*flag>=0)
 143   3                password[*flag]='0';
 144   3            break;
 145   3            case '#':
 146   3              lcd_cls();
 147   3              (*flag)=0;
 148   3              key_sign='n';
 149   3              if(cmp_pass(init_password,password)==0)
 150   3              {
 151   4                *ft_sign=1;
 152   4              }
 153   3              else
 154   3              {
 155   4                *ft_sign=2;
 156   4              }
 157   3              for(i=0;i<10;i++)
 158   3              {password[i]='0';}
 159   3            break;
 160   3            }
 161   2          }
 162   1          else 
 163   1          {
 164   2            switch(witch_key())
 165   2            {
 166   3            case '*':
 167   3              (*flag)--;
 168   3              lcd_display(2,24+(*flag+1)*8,2,8,symbol[2]);
 169   3              key_sign='n';
 170   3              if(*flag>=0)
 171   3                password[*flag]='0';
 172   3            break;
 173   3            case '#':
 174   3              lcd_cls();
 175   3              (*flag)=0; 
 176   3              key_sign='n';
 177   3              if(cmp_pass(init_password,password)==0)
 178   3              {
C51 COMPILER V9.60.0.0   WORK                                                              12/28/2020 08:57:05 PAGE 4   

 179   4                *ft_sign=1;
 180   4              }
 181   3              else
 182   3              {
 183   4                *ft_sign=2;
 184   4              }
 185   3              for(i=0;i<10;i++)
 186   3              {password[i]='0';}
 187   3            break;
 188   3            }
 189   2          }
 190   1      }
 191          
 192          void dis_()
 193          {
 194   1        lcd_display(0,0,8,113,picture[0]);
 195   1        delay(50000);
 196   1        lcd_display(0,64+48,2,16,prompt[11]);
 197   1        delay(50000);
 198   1        lcd_display(2,64+48,2,16,prompt[12]);
 199   1        delay(50000);
 200   1        lcd_display(4,64+48,2,16,prompt[13]);
 201   1        delay(50000);
 202   1        lcd_display(6,64+3*16,2,16,prompt[14]);
 203   1        delay(50000);
 204   1      
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1869    ----
   CONSTANT SIZE    =  13968    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
